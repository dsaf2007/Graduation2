#pragma checksum "/Users/apple/Desktop/Graduation2/Graduation2/Graduation2/Views/Home/Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6921397670a08e15722dbaae5f642c4f2bc3a88e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/Users/apple/Desktop/Graduation2/Graduation2/Graduation2/Views/_ViewImports.cshtml"
using Graduation2;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/apple/Desktop/Graduation2/Graduation2/Graduation2/Views/_ViewImports.cshtml"
using Graduation2.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6921397670a08e15722dbaae5f642c4f2bc3a88e", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d806070271eea60cecddc3db0e15b8d04f8ab24d", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<!DOCTYPE html>
<html>
<link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"" rel=""stylesheet""
  integrity=""sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"" crossorigin=""anonymous"">
<script src=""https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js""
  integrity=""sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"" crossorigin=""anonymous""></script>

");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6921397670a08e15722dbaae5f642c4f2bc3a88e3482", async() => {
                WriteLiteral(@"
  <table class=""table table-sm"" id=""major"" border=""1"" width=""1000"">
    <tr>
      <th align=""center"" colspan=""6"" width=""1000"" bgcolor=""D5D5D5"">전공</th>
    </tr>
    <tr>
      <th bgcolor=""D5D5D5""> 이수구분</th>
      <th bgcolor=""D5D5D5""> 응답유형</th>
      <th colspan=""6"" width=""800"" bgcolor=""D5D5D5"">학수번호 쉼표로 구분하여 입력 (CSE1234, CSE2345 ...)</th>
      <th>
        <button class=""add"" onClick=""userAdd()"">Add</button>
      </th>
    </tr>
    <tr>
      <td>
        <div class=""dropdown"">
          <button class=""btn btn-secondary btn-sm dropdown-toggle"" type=""button"" data-toggle=""dropdown""
            aria-haspopup=""true"" aria-expanded=""false"">
            이수구분
          </button>
          <ul class=""dropdown-menu"" aria-labelledby=""dropdownMenuButton1"">
            <li><a class=""dropdown-item"" href=""#"">전공</a></li>
            <li><a class=""dropdown-item"" href=""#"">전공필수</a></li>
            <li><a class=""dropdown-item"" href=""#"">전공전문</a></li>
            <li><a class=""dropdown-item"" href=""#"">기초설계</a></li>
         ");
                WriteLiteral(@"   <li><a class=""dropdown-item"" href=""#"">요소설계</a></li>
            <li><a class=""dropdown-item"" href=""#"">종합설계</a></li>
            <li><a class=""dropdown-item"" href=""#"">설계</a></li>
          </ul>
        </div>
      </td>
      <td>
        <div class=""dropdown"">
          <button class=""btn btn-secondary btn-sm dropdown-toggle"" type=""button"" data-toggle=""dropdown""
            aria-haspopup=""true"" aria-expanded=""false"">
            응답유형
          </button>
          <ul class=""dropdown-menu"" aria-labelledby=""dropdownMenuButton1"">
            <li><a class=""dropdown-item"" href=""#"">학점</a></li>
            <li><a class=""dropdown-item"" href=""#"">과목</a></li>
            <li><a class=""dropdown-item"" href=""#"">O/X</a></li>
          </ul>
        </div>
      </td>
      <td colspan=""6"" width=""100"">
        <input size=""50"">
      </td>
    </tr>
    <tr>
      <td>
        <input size=""40"">
      </td>
      <td>
        <input size=""40"">
      </td>
      <td colspan=""6"" width=""100"">
        <input size=""50"">
     ");
                WriteLiteral(@" </td>
    </tr>
    <tr>
      <td>
        <input size=""40"">
      </td>
      <td>
        <input size=""40"">
      </td>
      <td colspan=""6"" width=""100"">
        <input size=""50"">
      </td>
    </tr>
  </table>
  <br>
  <table class=""table table-sm"" id=""major"" border=""1"" width=""1000"">
    <tr>
      <th align=""center"" colspan=""6"" width=""1000"" bgcolor=""D5D5D5"">교양</th>
    </tr>
    <tr>
      <th bgcolor=""D5D5D5""> 이수구분</th>
      <th bgcolor=""D5D5D5""> 응답유형</th>
      <th colspan=""6"" width=""800"" bgcolor=""D5D5D5"">학수번호 쉼표로 구분하여 입력 (IGC1000, PRI2000 ...)</th>
      <th>
        <input type='button' value='Add' onclick='addMinor()' />
      </th>
    </tr>
    <tr>
      <td>
        <div class=""dropdown"">
          <button class=""btn btn-secondary btn-sm dropdown-toggle"" type=""button"" data-toggle=""dropdown""
            aria-haspopup=""true"" aria-expanded=""false"">
            이수구분
          </button>
          <ul class=""dropdown-menu"" aria-labelledby=""dropdownMenuButton1"">
            <li><a class=""dropdown-");
                WriteLiteral(@"item"" href=""#"">공통교양</a></li>
            <li><a class=""dropdown-item"" href=""#"">기본소양</a></li>
            <li><a class=""dropdown-item"" href=""#"">수학</a></li>
            <li><a class=""dropdown-item"" href=""#"">과학</a></li>
            <li><a class=""dropdown-item"" href=""#"">전산학</a></li>
            <li><a class=""dropdown-item"" href=""#"">MSC/BSM</a></li>
          </ul>
        </div>
      </td>
      <td>
        <div class=""dropdown"">
          <button class=""btn btn-secondary btn-sm dropdown-toggle"" type=""button"" data-toggle=""dropdown""
            aria-haspopup=""true"" aria-expanded=""false"">
            응답유형
          </button>
          <ul class=""dropdown-menu"" aria-labelledby=""dropdownMenuButton1"">
            <li><a class=""dropdown-item"" href=""#"">학점</a></li>
            <li><a class=""dropdown-item"" href=""#"">과목</a></li>
            <li><a class=""dropdown-item"" href=""#"">O/X</a></li>
          </ul>
        </div>
      </td>
      <td colspan=""6"" width=""100"">
        <input size=""50"">
      </td>
    </tr>
    <tr");
                WriteLiteral(@">
      <td>
        <input size=""40"">
      </td>
      <td>
        <input size=""40"">
      </td>
      <td colspan=""6"" width=""100"">
        <input size=""50"">
      </td>
    </tr>
    <tr>
      <td>
        <input size=""40"">
      </td>
      <td>
        <input size=""40"">
      </td>
      <td colspan=""6"" width=""100"">
        <input size=""50"">
      </td>
    </tr>
  </table>
  <br>
  <table class=""table table-sm"" id=""grad"" border=""1"" width=""1000"">

    <tr>
      <th align=""center"" colspan=""6"" width=""1000"" bgcolor=""D5D5D5"">졸업요건</th>
    </tr>
    <tr>
      <th bgcolor=""D5D5D5"">이수구분</th>
      <th bgcolor=""D5D5D5"">응답유형</th>
      <th colspan=""6"" width=""800"" bgcolor=""D5D5D5"">학점입력</th>
      <th>
        <input type='button' value='Add' onclick='addGrad()' />
      </th>
    </tr>
    <tr>
      <td>
        <div class=""dropdown"">
          <button class=""btn btn-secondary btn-sm dropdown-toggle"" type=""button"" data-toggle=""dropdown""
            aria-haspopup=""true"" aria-expanded=""false"">
            이수구분
");
                WriteLiteral(@"          </button>
          <ul class=""dropdown-menu"" aria-labelledby=""dropdownMenuButton1"">
            <li><a class=""dropdown-item"" href=""#"">영어강의이수</a></li>
            <li><a class=""dropdown-item"" href=""#"">외국어패스제</a></li>
            <li><a class=""dropdown-item"" href=""#"">졸업논문</a></li>
            <li><a class=""dropdown-item"" href=""#"">졸업시험</a></li>
            <li><a class=""dropdown-item"" href=""#"">종 취득학점</a></li>
            <li><a class=""dropdown-item"" href=""#"">평점 평균</a></li>
          </ul>
        </div>
      </td>
      <td>
        <div class=""dropdown"">
          <button class=""btn btn-secondary btn-sm dropdown-toggle"" type=""button"" data-toggle=""dropdown""
            aria-haspopup=""true"" aria-expanded=""false"">
            응답유형
          </button>
          <ul class=""dropdown-menu"" aria-labelledby=""dropdownMenuButton1"">
            <li><a class=""dropdown-item"" href=""#"">학점</a></li>
            <li><a class=""dropdown-item"" href=""#"">O/X</a></li>
          </ul>
        </div>
      </td>
      <td col");
                WriteLiteral(@"span=""6"" width=""100"">
        <input size=""50"">
      </td>
    </tr>
    <tr>
      <td>
        <input size=""40"">
      </td>
      <td>
        <input size=""40"">
      </td>
      <td colspan=""6"" width=""100"">
        <input size=""50"">
      </td>
    </tr>
    <tr>
      <td>
        <input size=""40"">
      </td>
      <td>
        <input size=""40"">
      </td>
      <td colspan=""6"" width=""100"">
        <input size=""50"">
      </td>
    </tr>
  </table>
  <script>
    function addMajor() {
      // table element 찾기
      const table = document.getElementById('major');

      // 새 행(Row) 추가
      const newRow = table.insertRow();

      // 새 행(Row)에 Cell 추가
      const newCell1 = newRow.insertCell(0);
      const newCell2 = newRow.insertCell(1);
      const newCell3 = newRow.insertCell(2);

      // Cell에 텍스트 추가
      newCell1.innerText = '새 항목';
      newCell2.innerText = '새 항목';
    }

    function addMinor() {
      // table element 찾기
      const table = document.getElementById('minor');

      // 새 행(R");
                WriteLiteral(@"ow) 추가
      const newRow = table.insertRow();

      // 새 행(Row)에 Cell 추가
      const newCell1 = newRow.insertCell(0);
      const newCell2 = newRow.insertCell(1);
      const newCell3 = newRow.insertCell(2);

      // Cell에 텍스트 추가
      newCell1.innerText = '새 항목';
      newCell2.innerText = '새 항목';
    }

    // function addGrad() {
    //     // table element 찾기
    //     const table = document.getElementById('grad');

    //     // 새 행(Row) 추가
    //     const newRow = table.insertRow();

    //     // 새 행(Row)에 Cell 추가
    //     const newCell1 = newRow.insertCell(0);
    //     const newCell2 = newRow.insertCell(1);
    //     const newCell3 = newRow.insertCell(2);

    //     // Cell에 텍스트 추가
    //     newCell1.innerHTML = ""<tr> <td><div class=dropdown><button class=btn btn-secondary dropdown-toggle type=button id=dropdownMenuButton1 data-bs-toggle=dropdown aria-expanded=""false"">이수구분</button><ul class=""dropdown-menu"" aria-labelledby=""dropdownMenuButton1""><li><a class=""dropdown-item"" href=""#"">공통교양</a>");
                WriteLiteral(@"</li><li><a class=""dropdown-item"" href=""#"">기본소양</a></li><li><a class=""dropdown-item"" href=""#"">수학</a></li><li><a class=""dropdown-item"" href=""#"">과학</a></li><li><a class=""dropdown-item"" href=""#"">전산학</a></li><li><a class=dropdown-item href=#>MSC/BSM</a></li></ul></div></td><td><div class=dropdown><button class=btn btn-secondary dropdown-toggle type=button id=dropdownMenuButton1 data-bs-toggle=dropdown aria-expanded=false>응답유형</button><ul class=dropdown-menu aria-labelledby=dropdownMenuButton1><li><a class=dropdown-item href=#>학점</a></li><li><a class=dropdown-item href=#>과목</a></li><li><a class=dropdown-item href=#>O/X</a></li></ul></div></td> <td colspan = 6 width = 100><input size=50></td></tr>;
    //     newCell2.innerText = '새 항목';
    // }

    const userAdd = () => {

      var trCnt = document.getElementsByTagName('tr').length;
      var inner = """";
      console.log(trCnt)
      if (baseCamp != 0) {
        trCnt = baseCamp;
      }
");
                WriteLiteral(@"
        if (trCnt <= 11) {
        inner += '<tr>'
        inner += '  <td><div class=""dropdown""><button class=""btn btn-secondary btn-sm dropdown-toggle"" type=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">이수구분</button><ul class=""dropdown-menu"" aria-labelledby=""dropdownMenuButton1""><li><a class=""dropdown-item"" href=""#"">공통교양</a></li><li><a class=""dropdown-item"" href=""#"">기본소양</a></li><li><a class=""dropdown-item"" href=""#"">수학</a></li><li><a class=""dropdown-item"" href=""#"">과학</a></li><li><a class=""dropdown-item"" href=""#"">전산학</a></li><li><a class=""dropdown-item"" href=""#"">MSC/BSM</a></li></ul></div></td>';
        inner += '  <td><div class=""dropdown""><button class=""btn btn-secondary btn-sm dropdown-toggle"" type=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">응답유형</button><ul class=""dropdown-menu"" aria-labelledby=""dropdownMenuButton1""><li><a class=""dropdown-item"" href=""#"">학점</a></li><li><a class=""dropdown-item"" href=""#"">과목</a></li><li><a class=""dropdown-item"" hr");
                WriteLiteral("ef=\"#\">O/X</a></li></ul></div></td>\';\n        inner += \'  <td colspan = \"6\" width  = \"100\"><input size=\"50\"></td>\';\n        inner += \'</tr>\';\n      }\n");
                WriteLiteral("\n  </script>\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
